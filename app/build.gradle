apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.huawei.agconnect'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolVersion

    defaultConfig {
        applicationId "com.example.xlwapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "learn-kotlin-${versionName}.apk"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "DB_PASSWORD_PERSON", "password")
        }
    }
    dataBinding {
        enabled = true
    }

//    //flavor
//    flavorDimensions "icecream"
//    productFlavors {
//        strawberry {
//            dimension "icecream"
//            buildConfigField "boolean", "DEBUG_MODE", "true"
//            applicationIdSuffix ".strawberry"
//        }
//        chocolate {
//            dimension "icecream"
//            buildConfigField "boolean", "DEBUG_MODE", "false"
//            applicationIdSuffix ".chocolate"
//        }
//        vanilla {
//            dimension "icecream"
//            buildConfigField "boolean", "DEBUG_MODE", "false"
//            applicationIdSuffix ".vanilla"
//        }
//    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "com.google.android.material:material:$supportlibVersion"
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation "androidx.multidex:multidex:$multidex_version"


    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    kapt "android.arch.lifecycle:compiler:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"
    //用于查看room数据库
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    //retorfit联网，拿数据(Json)   -scalars标准化   -moshi配合moshi库
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.squareup.retrofit2:converter-scalars:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    //moshi，转换Json的工具
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"

    implementation "com.github.bumptech.glide:glide:$version_glide"
    kapt "com.github.bumptech.glide:compiler:$version_glide"

    // WorkManager dependency
    def work_version = "1.0.1"
    implementation "android.arch.work:work-runtime-ktx:$work_version"

    // Client for retrieving location
    implementation "com.google.android.gms:play-services-location:17.0.0"

    //firebase
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
    implementation 'com.firebaseui:firebase-ui-auth:6.0.2'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    //华为
    implementation 'com.huawei.agconnect:agconnect-core:1.4.0.300'
    implementation 'com.huawei.hms:push:5.0.0.300'
    implementation 'com.huawei.hms:hianalytics:5.0.3.300'
    implementation 'com.huawei.agconnect:agconnect-crash:1.4.1.300'
    implementation 'com.huawei.hms:iap:5.0.2.300'

}
